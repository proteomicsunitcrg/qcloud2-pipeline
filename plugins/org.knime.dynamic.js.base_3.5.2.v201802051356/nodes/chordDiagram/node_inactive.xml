<?xml version="1.0" encoding="utf-8"?>
<js:knimeNode xmlns:js="http://knime.org/dynamicjsnode/v3.0"
		xmlns="http://knime.org/dynamicnode/v3.0"
		xmlns:n="http://knime.org/node/v2.12"
 		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 		xsi:schemaLocation="http://knime.org/dynamicjsnode/v3.0 http://www.knime.org/node/dynamicJSNode_v3.0.xsd"
 		jsNamespace="chord_namespace" nodeID="chord_diagram" categoryPath="/preview"
 		icon="../js.png" type="Visualizer">
    <name>Chord Diagram (JavaScript)</name>
    <shortDescription>A chord diagram based on the d3.js library.</shortDescription>
    <fullDescription>
	    <intro>
	    	<n:p>
					This chart displays asymmetric relationships between entities.
					The entities are placed in a radial layout. Ribbons are drawn between the entities.
					The size of an arc at an entity gives the size of the directed relationship to the entity connected by the ribbon.
				</n:p>
    	</intro>
    	<tab name="Options">
	    	<options>
				<columnFilterOption name="Included columns"
					id="columns" inPortIndex="0" label="Included columns" filterClasses="org.knime.core.data.DoubleValue">
					Data table containing a quadratic matrix. Select the columns which you wish to include in the plot.
					For excluded columns the corresponding rows are excluded as well.
				</columnFilterOption>
	    	</options>
    	</tab>

    	<tab name="General Plot Options">
	    	<options>
	    	    <stringOption name="Title" id="title" label="Title" defaultValue="Chord Diagram" optional="true" saveInView="true">
    				The chart title.
    			</stringOption>
    			<stringOption name="Subitle" id="subtitle" label="Subtitle" optional="true" saveInView="true">
    				The chart subtitle.
    			</stringOption>
				<checkBoxOption name="Use custom colors" id="customColors" label="Use custom colors" defaultValue="false">
					Select whether colors from the second input port are used instead of standard colors.
				</checkBoxOption>
        <checkBoxOption name="Display ticks" id="ticks" label="Display ticks" defaultValue="true">
					When checked, ticks are display for the chord diagram.
				</checkBoxOption>
				<checkBoxOption name="Display labels" id="labels" label="Display labels" defaultValue="false">
					When checked, the chord diagram labels is displayed.
				</checkBoxOption>
				<svgOption name="Image" id="svg" portIndex="0" label="Image" additionalWait="500" defaultWidth="600" defaultHeight="400" defaultFullscreen="true">
					Settings for image generation.
				</svgOption>
    		</options>
    	</tab>

		<tab name="Control Options">
          <options>
              <checkBoxOption name="Enable view controls" id="enableViewControls"
                   label="Enable view controls" defaultValue="true">
                   Check to enable controls in the chart.
               </checkBoxOption>
               <checkBoxOption name="Enable title editing" id="enableTitleEdit"
                   label="Enable title editing" defaultValue="true" enableDependency="enableViewControls" enableValue="true">
                   Check to enable the editing of the title within the view.
               </checkBoxOption>
               <checkBoxOption name="Enable subtitle editing" id="enableSubtitleEdit"
                   label="Enable subtitle editing" defaultValue="true" enableDependency="enableViewControls" enableValue="true">
                   Check to enable the editing of the subtitle within the view.
               </checkBoxOption>
           </options>
        </tab>

    </fullDescription>
    <interactiveView name="JavaScript Chord Diagram">
    	A d3.js implementation of a chord diagram.
    </interactiveView>
    <ports>
    	<inPort portType="Data" name="Display data" index="0">
			Data table containing a quadratic matrix.
			Columns and rows represent entities, cells give the size of the relationship between two given entities.
		</inPort>
		<inPort portType="Data" name="Color data" index="1" optional="true">
			Data table containing one column with the names of the entities. Each entity name can have a color assigned.
		</inPort>
    	<outPort portType="Image" name="Chord diagram image" index="0">
    		SVG image of the chord diagram.
    	</outPort>
    </ports>
	<js:resources>
		<!-- Added for inlining style rules when generating svg -->
		<js:resource type="css" path="styles.css" />
		<js:resource type="js" path="chord.js" />
	</js:resources>
	<js:dependencies>
		<js:dependency name="D3" path="D3_3.2.8" type="local" />
		<js:dependency name="jQuery" path="jQuery_1.11.0" type="local" />	</js:dependencies>
</js:knimeNode>
