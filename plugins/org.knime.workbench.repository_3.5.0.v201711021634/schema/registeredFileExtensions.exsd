<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.knime.workbench.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.knime.workbench.repository" id="registeredFileExtensions" name="File Extensions Registered for Workbench"/>
      </appInfo>
      <documentation>
         Allows to register a node factory for file extensions. This node factory is then used to create a new node when a file is droped into the workbench editor. Only registered types are shown in the workbench explorer.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="FileExtensionMapping"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="FileExtensionMapping">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="FileExtension"/>
         </sequence>
         <attribute name="NodeFactory" type="string" use="required">
            <annotation>
               <documentation>
                  Specify a node factory that accepts a file with the associated extension.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.knime.core.node.ContextAwareNodeFactory:"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="FileExtension">
      <complexType>
         <attribute name="extension" type="string" use="required">
            <annotation>
               <documentation>
                  The file extension to be registered (e.g. csv).
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         KNIME V2.4.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         KNIME AG, Zurich, Switzerland
      </documentation>
   </annotation>


</schema>
